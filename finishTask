<?php
header('Content-Type: application/json; charset=UTF-8');
ini_set('display_errors', 1);
error_reporting(E_ALL);

// 1) читаем JSON
$input = json_decode(file_get_contents('php://input'), true);
if (!is_array($input)) {
    echo json_encode(['error' => 'Неверный JSON']);
    exit;
}

// 2) тянем все нужные поля (любой регистр)
$id_seq  = $input['ID_SEQ']   ?? $input['id_seq']   ?? null;
$datnz   = $input['DATNZ']    ?? $input['datnz']    ?? null;
$nnz     = $input['NNZ']      ?? $input['nnz']      ?? null;
$ocher   = $input['OCHER']    ?? $input['ocher']    ?? null;
$kdmr    = $input['KDMR']     ?? $input['kdmr']     ?? null;
$nmmr    = $input['NMMR']     ?? $input['nmmr']     ?? null;
$tlot    = $input['TLOT']     ?? $input['tlot']     ?? null;
$shot    = $input['SHOT']     ?? $input['shot']     ?? null;
$kol1p   = $input['KOL1P']    ?? $input['kol1p']    ?? null;
$dzag1   = $input['DZAG1']    ?? $input['dzag1']    ?? null;
$dzag2   = $input['DZAG2']    ?? $input['dzag2']    ?? null;
$krat    = $input['KRAT']     ?? $input['krat']     ?? null;
$dlot    = $input['DLOT']     ?? $input['dlot']     ?? null;
$gsmr    = $input['GSMR']     ?? $input['gsmr']     ?? null;
$gst1    = $input['GST1']     ?? $input['gst1']     ?? null;
$nlet    = $input['NLET']     ?? $input['nlet']     ?? null;
$dlet    = $input['DLET']     ?? $input['dlet']     ?? null;
$spz     = $input['SPZ']      ?? $input['spz']      ?? null;
$prim    = $input['PRIM']     ?? $input['prim']     ?? null;

// 2.1) проверка ключей
if (!$id_seq || !$datnz || !$nnz) {
    echo json_encode(['error' => 'Missing required key fields']);
    exit;
}

// 3) подключаемся к БД
require_once __DIR__ . '/db_connect.php';
// в db_connect.php у вас должны быть определены $user, $pass, $connection_string
$conn = oci_connect($user, $pass, $connection_string);
if (!$conn) {
    $e = oci_error();
    echo json_encode(['error' => $e['message']]);
    exit;
}

// 4) удаляем запись из основной таблицы
$sqlDel = "
    DELETE FROM TS.T_TS_MNLZ2_TASK25
     WHERE ID_SEQ = :id_seq
       AND DATNZ  = TO_DATE(:datnz,'YYYY-MM-DD')
       AND NNZ    = :nnz
";
$st = oci_parse($conn, $sqlDel);
oci_bind_by_name($st, ':id_seq', $id_seq);
oci_bind_by_name($st, ':datnz',  $datnz);
oci_bind_by_name($st, ':nnz',    $nnz);
if (!oci_execute($st, OCI_COMMIT_ON_SUCCESS)) {
    $e = oci_error($st);
    echo json_encode(['error' => $e['message']]);
    exit;
}

// 5) вставляем ту же самую строку в таблицу _END
$sqlIns = "
    INSERT INTO TS.T_TS_MNLZ2_TASK25_END
      (ID_SEQ, DATNZ, NNZ, OCHER, KDMR, NMMR, TLOT, SHOT, KOL1P,
       DZAG1, DZAG2, KRAT, DLOT, GSMR, GST1, NLET, DLET, SPZ, PRIM)
    VALUES
      (:id_seq,
       TO_DATE(:datnz,'YYYY-MM-DD'),
       :nnz,
       :ocher,
       :kdmr,
       :nmmr,
       :tlot,
       :shot,
       :kol1p,
       :dzag1,
       :dzag2,
       :krat,
       :dlot,
       :gsmr,
       :gst1,
       :nlet,
       TO_DATE(:dlet,'DD-MON-YY'),
       :spz,
       :prim)
";
$st2 = oci_parse($conn, $sqlIns);
oci_bind_by_name($st2, ':id_seq', $id_seq);
oci_bind_by_name($st2, ':datnz',  $datnz);
oci_bind_by_name($st2, ':nnz',    $nnz);
oci_bind_by_name($st2, ':ocher',  $ocher);
oci_bind_by_name($st2, ':kdmr',   $kdmr);
oci_bind_by_name($st2, ':nmmr',   $nmmr);
oci_bind_by_name($st2, ':tlot',   $tlot);
oci_bind_by_name($st2, ':shot',   $shot);
oci_bind_by_name($st2, ':kol1p',  $kol1p);
oci_bind_by_name($st2, ':dzag1',  $dzag1);
oci_bind_by_name($st2, ':dzag2',  $dzag2);
oci_bind_by_name($st2, ':krat',   $krat);
oci_bind_by_name($st2, ':dlot',   $dlot);
oci_bind_by_name($st2, ':gsmr',   $gsmr);
oci_bind_by_name($st2, ':gst1',   $gst1);
oci_bind_by_name($st2, ':nlet',   $nlet);
oci_bind_by_name($st2, ':dlet',   $dlet);
oci_bind_by_name($st2, ':spz',    $spz);
oci_bind_by_name($st2, ':prim',   $prim);

if (!oci_execute($st2, OCI_COMMIT_ON_SUCCESS)) {
    $e = oci_error($st2);
    echo json_encode(['error' => $e['message']]);
    exit;
}

// 6) всё ок
echo json_encode(['success' => true]);

oci_close($conn);




















1. HTML-разметка
Вшиваем в ваш шаблон (например, рядом с таблицей):

html
Копировать
Редактировать
<!-- Кнопка вызова модалки -->
<button id="showCompletedBtn" class="btn">Посмотреть выполненные задания</button>

<!-- Модальное окно -->
<div id="completedModal" class="modal">
  <div class="modal-content">
    <span class="modal-close">&times;</span>
    <h2>Выполненные задания</h2>
    <div class="modal-body">
      <table id="completedTable">
        <thead>
          <tr>
            <th>№</th>
            <th>ID_SEQ</th>
            <th>Дата</th>
            <th>NNZ</th>
            <th>Очередность</th>
            <!-- добавьте нужные колонки -->
          </tr>
        </thead>
        <tbody>
          <!-- сюда придут строки из JS -->
        </tbody>
      </table>
    </div>
  </div>
</div>
2. CSS (чёрно-белый стиль)
css
Копировать
Редактировать
/* --- МОДАЛЬНОЕ ОКНО --- */
.modal {
  display: none;          /* скрыто по умолчанию */
  position: fixed;
  z-index: 1000;
  left: 0; top: 0;
  width: 100%; height: 100%;
  background: rgba(0,0,0,0.8);
}
.modal-content {
  background: #fff;
  color: #000;
  margin: 5% auto;
  padding: 20px;
  border-radius: 6px;
  width: 80%;
  max-width: 800px;
}
.modal-close {
  float: right;
  font-size: 28px;
  cursor: pointer;
}
.modal-close:hover {
  color: #f00;
}

/* таблица внутри */
#completedTable {
  border-collapse: collapse;
  width: 100%;
}
#completedTable th,
#completedTable td {
  border: 1px solid #000;
  padding: 8px;
  text-align: left;
}
#completedTable thead {
  background: #000;
  color: #fff;
}
#completedTable tbody tr:nth-child(even) {
  background: #f4f4f4;
}
3. JavaScript
js
Копировать
Редактировать
document.addEventListener('DOMContentLoaded', ()=> {
  const btn = document.getElementById('showCompletedBtn');
  const modal = document.getElementById('completedModal');
  const closeBtn = modal.querySelector('.modal-close');
  const tbody = document.querySelector('#completedTable tbody');

  // открыть
  btn.addEventListener('click', async () => {
    // очистить старые данные
    tbody.innerHTML = '';
    // получить данные
    try {
      const resp = await fetch('api/get_completed.php');
      if (!resp.ok) throw new Error(resp.statusText);
      const data = await resp.json();
      // заполняем таблицу
      data.forEach((row, idx) => {
        const tr = document.createElement('tr');
        tr.innerHTML = `
          <td>${idx + 1}</td>
          <td>${row.ID_SEQ}</td>
          <td>${row.DATNZ}</td>
          <td>${row.NNZ}</td>
          <td>${row.OCHER}</td>
        `;
        tbody.appendChild(tr);
      });
      modal.style.display = 'block';
    } catch (e) {
      console.error('Ошибка загрузки выполненных заданий', e);
      alert('Не удалось загрузить выполненные задания');
    }
  });

  // закрыть крестиком
  closeBtn.addEventListener('click', ()=> {
    modal.style.display = 'none';
  });
  // закрыть кликом по фону
  modal.addEventListener('click', e => {
    if (e.target === modal) modal.style.display = 'none';
  });
});
4. api/get_completed.php
php
Копировать
Редактировать
<?php
header('Content-Type: application/json; charset=UTF-8');
ini_set('display_errors', 1);
error_reporting(E_ALL);

// подключаемся
require_once __DIR__ . '/db_connect.php';
$conn = oci_connect($user, $pass, $connection_string);
if (!$conn) {
  $e = oci_error();
  echo json_encode(['error' => $e['message']]);
  exit;
}

// выбираем выполненные из таблицы _END
$sql = "
  SELECT
    ID_SEQ,
    TO_CHAR(DATNZ, 'YYYY-MM-DD') AS DATNZ,
    NNZ,
    OCHER
  FROM TS.T_TS_MNLZ2_TASK25_END
  ORDER BY DATNZ, NNZ, OCHER, ID_SEQ
";
$stid = oci_parse($conn, $sql);
oci_execute($stid);

$out = [];
while ($row = oci_fetch_assoc($stid)) {
  $out[] = $row;
}

oci_free_statement($stid);
oci_close($conn);

echo json_encode($out);
—

Теперь по клику на «Посмотреть выполненные задания» откроется чёрно-белая модалка с таблицей из T_TS_MNLZ2_TASK25_END. Всё закрывается крестиком или кликом за её пределы.




/* Кнопка «Посмотреть выполненные задания» */
#showCompletedBtn {
  position: fixed;          /* всегда фиксированно в окне */
  top: 20px;                /* отступ от верха */
  right: 20px;              /* отступ от правого края */
  background: #fff;         /* белый фон */
  color: #000;              /* чёрный текст */
  border: 1px solid #000;   /* тонкая чёрная рамка */
  border-radius: 6px;       /* скруглённые углы */
  padding: 8px 16px;        /* внутренние отступы */
  font-size: 16px;          /* удобочитаемый размер */
  font-weight: 600;
  cursor: pointer;          
  box-shadow: 0 2px 6px rgba(0,0,0,0.2);
  z-index: 1100;            /* поверх всего */
  transition: background .2s, color .2s;
}

#showCompletedBtn:hover {
  background: #000;         /* при наведении — чёрный фон */
  color: #fff;              /* и белый текст */
}

