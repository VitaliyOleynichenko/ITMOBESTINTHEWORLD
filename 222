document.addEventListener('click', tableClick);

function tableClick(e) {
  // а) находим ближайший <tr> от места клика
  const tr = e.target.closest('tr');

  // б) убедимся, что это действительно строка внутри <tbody>
  if (tr && tr.parentNode.tagName.toLowerCase() === 'tbody') {

    // — если до этого уже что-то было выделено, снимем у старой тр класс
    if (selectedRow && selectedRow !== tr) {
      selectedRow.classList.remove('highlighted-row');
    }

    // — запомним новую строку и добавим ей класс
    selectedRow = tr;
    tr.classList.add('highlighted-row');

    // — показываем меню именно для неё
    showMenu(tr, e.pageX, e.pageY);

  } else {
    // кликнули вне строк — скрываем меню (и сбрасываем подсветку)
    hideMenu();
  }
}

function showMenu(tr, pageX, pageY) {
  // НЕ вызывать hideMenu() тут! Мы уже сняли старую подсветку в tableClick.

  // очистим старые кнопки
  menuEl.innerHTML = '';

  // прочитаем из tr необходимые данные
  const idx      = +tr.dataset.index;
  const priority = +tr.dataset.priority;
  const status   = +tr.dataset.status;

  // — ВСЕГДА вверх/вниз, если статус != 1
  if (status !== 1) {
    addBtn(menuEl, '↑ Вверх',   () => moveUp(idx));
    addBtn(menuEl, '↓ Вниз',    () => moveDown(idx));

    // — кнопка «Следующий» или «Отложить»
    if (priority === 0) {
      addBtn(menuEl, 'Следующий ▶', () => promote(idx));
    } else {
      addBtn(menuEl, 'Отложить ⏸',   () => postpone(idx));
    }
    // — и «Закончить»
    addBtn(menuEl, 'Закончить ✖', () => finishTask(idx));
  }

  // позиционируем меню рядом с курсором
  menuEl.style.top     = pageY + 'px';
  menuEl.style.left    = pageX + 'px';
  menuEl.style.display = 'block';

  // клик вне меню скроет его
  setTimeout(() => {
    document.addEventListener('click', onDocClick);
  }, 0);
}

function hideMenu() {
  // скрываем сам контейнер
  menuEl.style.display = 'none';

  // снимаем подсветку, если она есть
  if (selectedRow) {
    selectedRow.classList.remove('highlighted-row');
    selectedRow = null;
  }

  document.removeEventListener('click', onDocClick);
}

function onDocClick(e) {
  // если кликнули вне самого меню — спрячем всё
  if (!menuEl.contains(e.target)) {
    hideMenu();
  }
}

// вспомогалка для кнопок
function addBtn(container, label, fn) {
  const btn = document.createElement('button');
  btn.textContent = label;
  btn.className   = 'context-menu-button';
  btn.onclick     = async () => {
    await fn();
    hideMenu();
    await reloadTable();  // если нужно снова перерисовать таблицу
  };
  container.appendChild(btn);
}
