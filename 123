function markedCount(dataRuchej, tableinf) {
  console.log("=== Начало выполнения функции markedCount ===");

  // 1. Подсчитываем количество объектов с каждым id в dataRuchej
  const counts = {};
  console.log("Начинаем подсчет количества объектов в dataRuchej...");

  for (let i = 0; i < dataRuchej.length; i++) {
    if (i >= 100) {
      console.log(`Прерывание цикла dataRuchej: достигнуто 100 итераций (итерация ${i}).`);
      break;
    } else if (i < 100) {
      const currentId = dataRuchej[i].id;
      counts[currentId] = (counts[currentId] || 0) + 1;
      console.log(`dataRuchej[${i}]: id = ${currentId}, текущее количество = ${counts[currentId]}`);
    }
  }
  console.log("Подсчет завершен. Результирующий объект counts:", counts);

  // 2. Обновляем tableinf ТОЛЬКО по тем id, что есть в counts, и собираем массив обновленных объектов
  console.log("Начинаем обновление объектов в tableinf...");
  const updates = []; // сюда сложим только те объекты, которые действительно обновились

  for (let i = 0; i < tableinf.length; i++) {
    if (i >= 100) {
      console.log(`Прерывание цикла tableinf: достигнуто 100 итераций (итерация ${i}).`);
      break;
    } else if (i < 100) {
      const currentId = tableinf[i].id;
      // Проверяем, есть ли этот id в counts
      if (counts.hasOwnProperty(currentId)) {
        // Обновляем поле marked
        tableinf[i].marked = counts[currentId];
        // Добавляем объект в массив updates, чтобы отправить только его
        updates.push(tableinf[i]);
        console.log(
          `tableinf[${i}]: id = ${currentId}, поле marked = ${tableinf[i].marked} (добавлено в updates).`
        );
      } else {
        console.log(
          `tableinf[${i}]: id = ${currentId} отсутствует в counts, пропускаем обновление.`
        );
      }
    }
  }
  console.log("Обновление tableinf завершено. Массив объектов для передачи на сервер:", updates);

  // 3. Передаем ТОЛЬКО обновленные объекты на сервер
  //    Теперь это массив (updates), а не объект, поэтому .map(...) в updateDataOnServer будет работать корректно
  console.log("Передача обновленных данных на сервер...");
  updateDataOnServer(updates);
  console.log("Данные успешно переданы на сервер.");

  console.log("=== Завершение выполнения функции markedCount ===");
}
