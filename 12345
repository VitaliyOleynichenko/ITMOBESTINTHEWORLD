1. get_tasks.php
Что делает: возвращает все активные (status≠1) записи из TS.T_TS_MNLZ2_TASK25 в порядке: сначала приоритетные (priority=1) по их позиции, затем неприоритетные по их позиции.
Когда вызывается:

При загрузке страницы (или модуля) с таблицей задач (.table-container #tabC), чтобы отрисовать весь список строк.
Параметры: нет.
Возвращает: JSON‑массив объектов с полями

js
Копировать
[{ id_seq, datnz, nnz, ocher, position, priority, status, marked_count }, …]
2. move_up.php
Что делает: перемещает указанную задачу на одну позицию вверх в своём разделе (приоритетные или неприоритетные), меняя position в БД и подвинув «соседа» вниз.
Когда вызывается:

При клике на кнопку “↑” в контекстном меню строки.
Параметры (POST‑JSON):

js
Копировать
{ id_seq, datnz, nnz }
Возвращает:

js
Копировать
{ success: true, tasks: […] }
— tasks можно сразу подхватить и перерисовать таблицу.

3. move_down.php
Что делает: аналогично move_up.php, но опускает задачу на одну позицию вниз в своём разделе.
Когда вызывается:

При клике на кнопку “↓” в контекстном меню строки.
Параметры (POST‑JSON):

js
Копировать
{ id_seq, datnz, nnz }
Возвращает: JSON с флагом успеха и, при желании, обновлённым списком задач.

4. finish_task.php
Что делает: завершает задачу: устанавливает status = 1 и (по желанию) удаляет её из отображаемого списка.
Когда вызывается:

При клике на кнопку “Завершить” в меню строки (и для приоритетных, и для неприоритетных).
Параметры (POST‑JSON):

js
Копировать
{ id_seq, datnz, nnz }
Возвращает:

js
Копировать
{ success: true }
— после чего фронтенд убирает эту строку из таблицы.

5. next_task.php
Что делает: ставит задачу в приоритет, присваивая priority = 1 и новую position = 1 среди приоритетных, сдвигая остальных приоритетных вниз (increment).
Когда вызывается:

При клике на кнопку “Следующий” в меню неприоритетной строки.
Параметры (POST‑JSON):

js
Копировать
{ id_seq, datnz, nnz }
Возвращает:

js
Копировать
{ success: true, tasks: […] }
— возвращает обновлённый упорядоченный список задач.

6. postpone_task.php
Что делает: снимает приоритет с задачи: priority = 0 и position присваивается как max(position) среди неприоритетных + 1, сдвигая остальных.
Когда вызывается:

При клике на кнопку “Отложить” в меню приоритетной строки.
Параметры (POST‑JSON):

js
Копировать
{ id_seq, datnz, nnz }
Возвращает:

js
Копировать
{ success: true, tasks: […] }
7. update_marked.php
Что делает: обновляет поле marked_count у конкретной задачи (сколько размечено заготовок).
Когда вызывается:

При каждом изменении счётчика размечённых заготовок на интерфейсе (например, после клика в визуальном редакторе).
Параметры (POST‑JSON):

js
Копировать
{ id_seq, datnz, nnz, marked_count }
Возвращает:

js
Копировать
{ success: true }
Дополнительные моменты
db_connect.php
Файл с единым кодом подключения к Oracle. Подключается в каждом из перечисленных скриптов.

Порядок вызовов в JS (пример):

js
Копировать
// при загрузке
loadTasks(); // => get_tasks.php

// в контекстном меню строки
onClickUp  => fetch('move_up.php',    {…}).then(loadTasks);
onClickDown=> fetch('move_down.php',  {…}).then(loadTasks);
onClickFinish => fetch('finish_task.php',{…}).then(loadTasks);

// если строка не в приоритете
onClickNext => fetch('next_task.php',   {…}).then(loadTasks);

// если строка в приоритете
onClickPostpone => fetch('postpone_task.php',{…}).then(loadTasks);

// при изменении размечено
onMarkedChange(count) => fetch('update_marked.php',{…});
SQL‑схема:
Не забудьте до этого добавить в TS.T_TS_MNLZ2_TASK25 новые колонки:

sql
Копировать
ALTER TABLE TS.T_TS_MNLZ2_TASK25
  ADD ( position      NUMBER,
        priority      NUMBER DEFAULT 0,  -- 0/1
        status        NUMBER DEFAULT 0,  -- 0=active,1=finished
        marked_count  NUMBER DEFAULT 0
      );
С этим списком вы сможете чётко понять, какие PHP‑файлы нужно написать и в каких местах интерфейса их вызывать. Если нужна детализация по каждому скрипту — дайте знать, и я приведу их код.






Вы сказали:
хорошо, теперь напиши полный код по каждой позиции из списка 


ChatGPT сказал:
Закончила рассуждение
Ниже полный код всех PHP‑эндпоинтов и общего файла подключения. Подставьте свои реальные параметры подключения в db_connect.php. После каждого DML‑оператора идёт oci_commit().

db_connect.php
php
Копировать
<?php
// db_connect.php
$username = 'your_username';
$password = 'your_password';
$connection_string = 'localhost/XE';

$conn = oci_connect($username, $password, $connection_string);
if (!$conn) {
    $e = oci_error();
    header('Content-Type: application/json');
    echo json_encode(['error' => $e['message']]);
    exit;
}
get_tasks.php
php
Копировать
<?php
// get_tasks.php — Read All
require 'db_connect.php';
header('Content-Type: application/json');

$sql = "
  SELECT 
    ID_SEQ,
    TO_CHAR(DATNZ,'YYYY-MM-DD') AS DATNZ,
    NNZ,
    OCHER,
    POSITION,
    PRIORITY,
    STATUS,
    MARKED_COUNT
  FROM TS.T_TS_MNLZ2_TASK25
  WHERE STATUS != 1
  ORDER BY PRIORITY DESC, POSITION
";
$stid = oci_parse($conn, $sql);
oci_execute($stid);

$out = [];
while ($row = oci_fetch_assoc($stid)) {
    $out[] = $row;
}

oci_free_statement($stid);
oci_close($conn);

echo json_encode($out);
move_up.php
php
Копировать
<?php
// move_up.php — Move one position up
require 'db_connect.php';
header('Content-Type: application/json');

$data = json_decode(file_get_contents('php://input'), true);
if (!$data) {
    echo json_encode(['error'=>'Invalid JSON']);
    exit;
}

// 1) Получаем текущее положение и приоритет
$sql = "
  SELECT POSITION, PRIORITY
    FROM TS.T_TS_MNLZ2_TASK25
   WHERE ID_SEQ = :id_seq
     AND DATNZ  = TO_DATE(:datnz,'YYYY-MM-DD')
     AND NNZ    = :nnz
";
$stid = oci_parse($conn, $sql);
oci_bind_by_name($stid, ':id_seq', $data['id_seq']);
oci_bind_by_name($stid, ':datnz',  $data['datnz']);
oci_bind_by_name($stid, ':nnz',    $data['nnz']);
oci_execute($stid);
$row = oci_fetch_assoc($stid);
oci_free_statement($stid);

if (!$row) {
    echo json_encode(['error'=>'Task not found']);
    exit;
}

$pos      = (int)$row['POSITION'];
$priority = (int)$row['PRIORITY'];

if ($pos > 1) {
    // 2) Меняем соседу position = pos, а этой записи pos-1
    // Сосед сверху:
    $sql2 = "
      UPDATE TS.T_TS_MNLZ2_TASK25
         SET POSITION = POSITION + 1
       WHERE PRIORITY = :priority
         AND POSITION = :pos_minus
    ";
    $stid2 = oci_parse($conn, $sql2);
    oci_bind_by_name($stid2, ':priority', $priority);
    oci_bind_by_name($stid2, ':pos_minus', $pos - 1);
    oci_execute($stid2);

    $sql3 = "
      UPDATE TS.T_TS_MNLZ2_TASK25
         SET POSITION = POSITION - 1
       WHERE ID_SEQ = :id_seq
         AND DATNZ  = TO_DATE(:datnz,'YYYY-MM-DD')
         AND NNZ    = :nnz
    ";
    $stid3 = oci_parse($conn, $sql3);
    oci_bind_by_name($stid3, ':id_seq', $data['id_seq']);
    oci_bind_by_name($stid3, ':datnz',  $data['datnz']);
    oci_bind_by_name($stid3, ':nnz',    $data['nnz']);
    oci_execute($stid3);

    oci_commit($conn);
}

// Возвращаем обновлённый список
require 'get_tasks.php';
move_down.php
php
Копировать
<?php
// move_down.php — Move one position down
require 'db_connect.php';
header('Content-Type: application/json');

$data = json_decode(file_get_contents('php://input'), true);
if (!$data) {
    echo json_encode(['error'=>'Invalid JSON']);
    exit;
}

// 1) Получаем текущее положение и приоритет
$sql = "
  SELECT POSITION, PRIORITY
    FROM TS.T_TS_MNLZ2_TASK25
   WHERE ID_SEQ = :id_seq
     AND DATNZ  = TO_DATE(:datnz,'YYYY-MM-DD')
     AND NNZ    = :nnz
";
$stid = oci_parse($conn, $sql);
oci_bind_by_name($stid, ':id_seq', $data['id_seq']);
oci_bind_by_name($stid, ':datnz',  $data['datnz']);
oci_bind_by_name($stid, ':nnz',    $data['nnz']);
oci_execute($stid);
$row = oci_fetch_assoc($stid);
oci_free_statement($stid);

if (!$row) {
    echo json_encode(['error'=>'Task not found']);
    exit;
}

$pos      = (int)$row['POSITION'];
$priority = (int)$row['PRIORITY'];

// 2) Находим максимальную позицию в этой группе
$sqlMax = "
  SELECT MAX(POSITION) AS MAXPOS
    FROM TS.T_TS_MNLZ2_TASK25
   WHERE PRIORITY = :priority
     AND STATUS != 1
";
$stidMax = oci_parse($conn, $sqlMax);
oci_bind_by_name($stidMax, ':priority', $priority);
oci_execute($stidMax);
$maxRow = oci_fetch_assoc($stidMax);
oci_free_statement($stidMax);

$maxpos = (int)$maxRow['MAXPOS'];

if ($pos < $maxpos) {
    // Сосед снизу:
    $sql2 = "
      UPDATE TS.T_TS_MNLZ2_TASK25
         SET POSITION = POSITION - 1
       WHERE PRIORITY = :priority
         AND POSITION = :pos_plus
    ";
    $stid2 = oci_parse($conn, $sql2);
    oci_bind_by_name($stid2, ':priority', $priority);
    oci_bind_by_name($stid2, ':pos_plus', $pos + 1);
    oci_execute($stid2);

    $sql3 = "
      UPDATE TS.T_TS_MNLZ2_TASK25
         SET POSITION = POSITION + 1
       WHERE ID_SEQ = :id_seq
         AND DATNZ  = TO_DATE(:datnz,'YYYY-MM-DD')
         AND NNZ    = :nnz
    ";
    $stid3 = oci_parse($conn, $sql3);
    oci_bind_by_name($stid3, ':id_seq', $data['id_seq']);
    oci_bind_by_name($stid3, ':datnz',  $data['datnz']);
    oci_bind_by_name($stid3, ':nnz',    $data['nnz']);
    oci_execute($stid3);

    oci_commit($conn);
}

// Возвращаем обновлённый список
require 'get_tasks.php';
finish_task.php
php
Копировать
<?php
// finish_task.php — Mark as finished (status = 1)
require 'db_connect.php';
header('Content-Type: application/json');

$data = json_decode(file_get_contents('php://input'), true);
if (!$data) {
    echo json_encode(['error'=>'Invalid JSON']);
    exit;
}

$sql = "
  UPDATE TS.T_TS_MNLZ2_TASK25
     SET STATUS = 1
   WHERE ID_SEQ = :id_seq
     AND DATNZ  = TO_DATE(:datnz,'YYYY-MM-DD')
     AND NNZ    = :nnz
";
$stid = oci_parse($conn, $sql);
oci_bind_by_name($stid, ':id_seq', $data['id_seq']);
oci_bind_by_name($stid, ':datnz',  $data['datnz']);
oci_bind_by_name($stid, ':nnz',    $data['nnz']);
oci_execute($stid);
oci_commit($conn);

echo json_encode(['success'=>true]);
next_task.php
php
Копировать
<?php
// next_task.php — Promote to priority (move to top of priority list)
require 'db_connect.php';
header('Content-Type: application/json');

$data = json_decode(file_get_contents('php://input'), true);
if (!$data) {
    echo json_encode(['error'=>'Invalid JSON']);
    exit;
}

// 1) Сдвигаем всех приоритетных вниз
$sql1 = "
  UPDATE TS.T_TS_MNLZ2_TASK25
     SET POSITION = POSITION + 1
   WHERE PRIORITY = 1
     AND STATUS != 1
";
oci_parse($conn, $sql1);
oci_execute(oci_parse($conn, $sql1));

// 2) Делаем эту задачу приоритетной и ставим position=1
$sql2 = "
  UPDATE TS.T_TS_MNLZ2_TASK25
     SET PRIORITY = 1,
         POSITION = 1
   WHERE ID_SEQ = :id_seq
     AND DATNZ  = TO_DATE(:datnz,'YYYY-MM-DD')
     AND NNZ    = :nnz
";
$stid2 = oci_parse($conn, $sql2);
oci_bind_by_name($stid2, ':id_seq', $data['id_seq']);
oci_bind_by_name($stid2, ':datnz',  $data['datnz']);
oci_bind_by_name($stid2, ':nnz',    $data['nnz']);
oci_execute($stid2);

oci_commit($conn);

// Возвращаем обновлённый список
require 'get_tasks.php';
postpone_task.php
php
Копировать
<?php
// postpone_task.php — Demote from priority (move to end of non‑priority list)
require 'db_connect.php';
header('Content-Type: application/json');

$data = json_decode(file_get_contents('php://input'), true);
if (!$data) {
    echo json_encode(['error'=>'Invalid JSON']);
    exit;
}

// 1) Получаем текущее position
$sql0 = "
  SELECT POSITION
    FROM TS.T_TS_MNLZ2_TASK25
   WHERE ID_SEQ = :id_seq
     AND DATNZ  = TO_DATE(:datnz,'YYYY-MM-DD')
     AND NNZ    = :nnz
";
$stid0 = oci_parse($conn, $sql0);
oci_bind_by_name($stid0, ':id_seq', $data['id_seq']);
oci_bind_by_name($stid0, ':datnz',  $data['datnz']);
oci_bind_by_name($stid0, ':nnz',    $data['nnz']);
oci_execute($stid0);
$row0 = oci_fetch_assoc($stid0);
oci_free_statement($stid0);

if ($row0) {
    $oldPos = (int)$row0['POSITION'];

    // 2) Сдвигаем вверх всех приоритетных ниже этой
    $sql1 = "
      UPDATE TS.T_TS_MNLZ2_TASK25
         SET POSITION = POSITION - 1
       WHERE PRIORITY = 1
         AND STATUS != 1
         AND POSITION > :oldPos
    ";
    $stid1 = oci_parse($conn, $sql1);
    oci_bind_by_name($stid1, ':oldPos', $oldPos);
    oci_execute($stid1);

    // 3) Находим max position среди неприоритетных
    $sqlMax = "
      SELECT NVL(MAX(POSITION),0) AS MAXPOS
        FROM TS.T_TS_MNLZ2_TASK25
       WHERE PRIORITY = 0
         AND STATUS != 1
    ";
    $stidMax = oci_parse($conn, $sqlMax);
    oci_execute($stidMax);
    $rMax = oci_fetch_assoc($stidMax);
    oci_free_statement($stidMax);
    $newPos = (int)$rMax['MAXPOS'] + 1;

    // 4) Обновляем эту задачу
    $sql2 = "
      UPDATE TS.T_TS_MNLZ2_TASK25
         SET PRIORITY = 0,
             POSITION = :newPos
       WHERE ID_SEQ = :id_seq
         AND DATNZ  = TO_DATE(:datnz,'YYYY-MM-DD')
         AND NNZ    = :nnz
    ";
    $stid2 = oci_parse($conn, $sql2);
    oci_bind_by_name($stid2, ':newPos', $newPos);
    oci_bind_by_name($stid2, ':id_seq', $data['id_seq']);
    oci_bind_by_name($stid2, ':datnz',  $data['datnz']);
    oci_bind_by_name($stid2, ':nnz',    $data['nnz']);
    oci_execute($stid2);

    oci_commit($conn);
}

// Возвращаем обновлённый список
require 'get_tasks.php';
update_marked.php
php
Копировать
<?php
// update_marked.php — Update marked_count
require 'db_connect.php';
header('Content-Type: application/json');

$data = json_decode(file_get_contents('php://input'), true);
if (!$data) {
    echo json_encode(['error'=>'Invalid JSON']);
    exit;
}

$sql = "
  UPDATE TS.T_TS_MNLZ2_TASK25
     SET MARKED_COUNT = :marked_count
   WHERE ID_SEQ = :id_seq
     AND DATNZ  = TO_DATE(:datnz,'YYYY-MM-DD')
     AND NNZ    = :nnz
";
$stid = oci_parse($conn, $sql);
oci_bind_by_name($stid, ':marked_count', $data['marked_count']);
oci_bind_by_name($stid, ':id_seq',       $data['id_seq']);
oci_bind_by_name($stid, ':datnz',        $data['datnz']);
oci_bind_by_name($stid, ':nnz',          $data['nnz']);
oci_execute($stid);
oci_commit($conn);

echo json_encode(['success'=>true]);
